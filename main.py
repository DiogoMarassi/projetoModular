"""
M√≥dulo Principal
INF1301 ‚Äì Programa√ß√£o Modular
Respons√°veis: Todos

Este m√≥dulo chama os outros quatro m√≥dulos e apresenta um menu
para que o usu√°rio possa realizar as a√ß√µes desejadas.
"""

from modulos.lancamento import *
from modulos.relatorio import *
from modulos.notificacao import *
from modulos.planejamento import *

from pprint import pprint #Para um pretty print no console
from datetime import datetime
import os
from dotenv import load_dotenv

from config import categorias

# Vari√°veis para as notific√µes
load_dotenv()
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
chat_id = 1665469613


## MENU NOTIFICACOES
def menu_notificacoes():
    while True:
        print("\n===== Menu Notifica√ß√µes =====")
        print("1. Listar notifica√ß√µes")
        print("2. Salvar notifica√ß√£o local")
        print("3. Enviar notifica√ß√£o para Telegram")
        print("4. Resetar notifica√ß√µes (APAGAR TUDO)")
        print("5. Sair")
        
        opcao = input("Escolha uma op√ß√£o: ")

        if opcao == "1":
            response = listarNotificacoes()
            if "Success" in response:
                print("\nüìã Notifica√ß√µes:")
                for n in response["Content"]:
                    print(f"- {n['data']} : {n['conteudo']}")
            else:
                print("\nNenhuma notifica√ß√£o encontrada.")

        elif opcao == "2":
            conteudo = input("Digite o conte√∫do da notifica√ß√£o: ")
            response = salvarNotificacao(conteudo)
            if "Success" in response:
                print("\nNotifica√ß√£o salva localmente.")
            else:
                print("\nErro ao salvar notifica√ß√£o.")

        elif opcao == "3":
            conteudo = input("Digite o conte√∫do da notifica√ß√£o: ")

            response = enviarNotificacao(chat_id, conteudo)
            if "Success" in response:
                print("\nMensagem enviada para o Telegram e salva localmente.")
            else:
                print(f"\nErro: {response['Content']}")

        elif opcao == "4":
            confirm = input("Tem certeza que deseja APAGAR TODAS as notifica√ß√µes? (s/n): ")
            if confirm.lower() == "s":
                print("\nTodas as notifica√ß√µes foram apagadas.")
            else:
                print("\nOpera√ß√£o cancelada.")

        elif opcao == "5":
            print("\nSaindo...")
            break

        else:
            print("\nOp√ß√£o inv√°lida. Tente novamente.")



## MENU RELATORIO
def menu_relatorio():
    while True:
        print("\n===== Menu Relat√≥rio =====")
        print("1. Gerar um relat√≥rio financeiro em um per√≠odo espec√≠fico")
        print("2. Gerar um comparativo entre dois anos completos")
        print("3. Sair")
        
        opcao = input("Escolha uma op√ß√£o: ")

        if opcao == "1":
            data_inicio_str = input("Escolha uma data de in√≠cio (formato YYYY-MM-DD): ")
            data_fim_str = input("Escolha uma data de fim (formato YYYY-MM-DD): ")

            try:
                data_inicio = datetime.strptime(data_inicio_str, "%Y-%m-%d")
                data_fim = datetime.strptime(data_fim_str, "%Y-%m-%d")
            except ValueError:
                print("Formato de data inv√°lido. Use o formato YYYY-MM-DD.")
                continue

            periodo = {"data_inicio": data_inicio, "data_final": data_fim}

            response = gerar_relatorio_financeiro(periodo, True)
            if (response["Status"] == 200):
                print("\nüìã Relat√≥rio criado com sucesso!\n")
                pprint(response, sort_dicts=False)
                gerar_grafico_pizza_despesas(response)
            else:
                print("\nOcorreu um erro na elabora√ß√£o do relat√≥rio.")

        elif opcao == "2":
            ano1 = int(input("Escolha um ano de in√≠cio: "))
            ano2 = int(input("Escolha o ano de fim: "))
            response = gerar_comparativo(ano1, ano2)
            if (response["Status"] == 200):
                print("\nComparativo criado com sucesso:\n")
                pprint(response, sort_dicts=False)
            else:
                print("\nErro na elabora√ß√£o do comparativo.")


        elif opcao == "3":
            print("\nSaindo...")
            break

        else:
            print("\nOp√ß√£o inv√°lida. Tente novamente.")

## MENU LAN√áAMENTOS
def menu_lancamentos():
    while True:
        print("\n===== Menu Lan√ßamentos Financeiros =====")
        print("1. Cadastrar lan√ßamento")
        print("2. Editar lan√ßamento")
        print("3. Remover lan√ßamento")
        print("4. Listar lan√ßamentos")
        print("5. Calcular saldo mensal")
        print("6. Sair")
        opcao = input("Escolha uma op√ß√£o: ")

        if opcao == "1":
            descricao = input("Descri√ß√£o: ")
            valor = float(input("Valor: "))
            data_str = input("Data (YYYY-MM-DD): ")
            tipo = input("Tipo (receita/despesa): ")
            while True:
                categoria = input("Categoria: ")
                if categoria in categorias:
                    print(f"Categoria '{categoria}' v√°lida.")
                    break  # sai do loop se categoria √© v√°lida
                else:
                    print(f"Categoria inv√°lida! Por favor, escolha uma das seguintes: {categorias}")
            try:
                data = datetime.strptime(data_str, "%Y-%m-%d")
            except ValueError:
                print("Data inv√°lida.")
                continue
            dados = {
                "descricao": descricao,
                "valor": valor,
                "data": data,
                "tipo": tipo,
                "categoria": categoria
            }
            response = criarLancamento(dados)
            print(response)

        elif opcao == "2":
            id_lanc = int(input("ID do lan√ßamento a editar: "))
            descricao = input("Nova descri√ß√£o: ")
            valor = float(input("Novo valor: "))
            data_str = input("Nova data (YYYY-MM-DD): ")
            tipo = input("Novo tipo (receita/despesa): ")
            while True:
                categoria = input("Nova categoria: ")
                if categoria in categorias:
                    print(f"Categoria '{categoria}' v√°lida.")
                    break  # sai do loop se categoria √© v√°lida
                else:
                    print(f"Categoria inv√°lida! Por favor, escolha uma das seguintes: {categorias}")
            try:
                data = datetime.strptime(data_str, "%Y-%m-%d")
            except ValueError:
                print("Data inv√°lida.")
                continue
            novos_dados = {
                "descricao": descricao,
                "valor": valor,
                "data": data,
                "tipo": tipo,
                "categoria": categoria
            }
            response = editarLancamento(id_lanc, novos_dados)
            print(response)

        elif opcao == "3":
            id_lanc = int(input("ID do lan√ßamento a remover: "))
            response = removerLancamento(id_lanc)
            print(response)

        elif opcao == "4":
            print("Filtros opcionais (pressione Enter para ignorar):")
            valor = input("Valor: ")
            data_str = input("Data (YYYY-MM-DD): ")
            tipo = input("Tipo (receita/despesa): ")
            categoria = input("Categoria: ")
            filtros = {}
            if valor:
                try:
                    filtros["valor"] = float(valor)
                except ValueError:
                    print("Valor inv√°lido.")
                    continue
            if data_str:
                try:
                    filtros["data"] = datetime.strptime(data_str, "%Y-%m-%d")
                except ValueError:
                    print("Data inv√°lida.")
                    continue
            if tipo:
                filtros["tipo"] = tipo
            if categoria:
                filtros["categoria"] = categoria
            response = listarLancamentos(filtros)
            content = response.get("Content", None)
            if "Success" in response and isinstance(content, list):
                print("\nLan√ßamentos encontrados:")
                print_lancamentos(content)
            elif isinstance(content, str):
                print(content)
            else:
                print("Nenhum lan√ßamento encontrado ou erro desconhecido.")

        elif opcao == "5":
            mes = int(input("M√™s (1-12): "))
            ano = int(input("Ano (ex: 2025): "))
            response = calcularSaldoMensal(mes, ano)
            print(response)

        elif opcao == "6":
            print("Saindo do menu de lan√ßamentos...")
            break

        else:
            print("Op√ß√£o inv√°lida. Tente novamente.")


def print_lancamentos(lancamentos):
    """
    Exibe uma lista de lan√ßamentos financeiros de forma formatada no terminal.
    """
    if not lancamentos:
        print("Nenhum lan√ßamento encontrado.")
        return
    print("\nID | Data       | Tipo     | Categoria      | Valor      | Descri√ß√£o")
    print("-"*70)
    for l in lancamentos:
        data_str = l['data'].strftime('%Y-%m-%d') if hasattr(l['data'], 'strftime') else str(l['data'])
        print(f"{l['id']:>2} | {data_str} | {l['tipo']:<8} | {l['categoria']:<13} | R$ {l['valor']:>8.2f} | {l['descricao']}")


## MENU PLANEJAMENTO
def menu_planejamento():
    while True:
        print("\n===== Menu Planejamento Financeiro =====")
        print("1. Calcular divis√£o informando o sal√°rio")
        print("2. Calcular divis√£o a partir do √∫ltimo sal√°rio dos lan√ßamentos")
        print("3. Visualizar divis√£o salva")
        print("4. Editar manualmente divis√£o de gastos")
        print("5. Sair")

        opcao = input("Escolha uma op√ß√£o: ")

        if opcao == "1":
            salario_str = input("Informe o sal√°rio base: ")
            try:
                salario = float(salario_str)
            except ValueError:
                print("Sal√°rio inv√°lido.")
                continue

            resposta = calculaDivisaoGastos(salario)
            pprint(resposta)

        elif opcao == "2":
            resposta = calculaDivisaoDoUltimoSalario()
            pprint(resposta)

        elif opcao == "3":
            resposta = obterDivisaoSalva()
            pprint(resposta)

        elif opcao == "4":
            salario_str = input("Informe o sal√°rio total: ")
            try:
                salario = float(salario_str)
            except ValueError:
                print("Sal√°rio inv√°lido.")
                continue

            divisao = {}
            print("Informe os valores para cada categoria:")
            categorias = [
                "moradia",
                "alimentacao",
                "transporte",
                "lazer",
                "saude",
                "educacao",
                "guardar"
            ]
            soma = 0.0
            for c in categorias:
                valor_str = input(f"{c.capitalize()}: ")
                try:
                    valor = float(valor_str)
                except ValueError:
                    print(f"Valor inv√°lido para {c}.")
                    break
                divisao[c] = valor
                soma += valor
            else:
                if round(soma, 2) != round(salario, 2):
                    print(f"Soma dos valores ({soma}) difere do sal√°rio informado ({salario}).")
                    continue

                nova_divisao = {
                    "salario": salario,
                    "divisao": divisao
                }
                resposta = editarDivisaoGastos(nova_divisao)
                pprint(resposta)

        elif opcao == "5":
            print("Saindo do menu de planejamento...")
            break

        else:
            print("Op√ß√£o inv√°lida. Tente novamente.")



if __name__ == "__main__":
    while True:
        print("1. Notifica√ß√£o")
        print("2. Relat√≥rio financeiro")
        print("3. Lan√ßamentos financeiros")
        print("4. Planejamento financeiro")
        print("5. Sair")

        opcao = input("Escolha uma categoria: ")

        if opcao == "1":
            menu_notificacoes()
        elif opcao == "2":
            menu_relatorio()
        elif opcao == "3":
            menu_lancamentos()
        elif opcao == "4":
            menu_planejamento()
        else:
            print("\nSaindo do programa... Ciao!")
            break